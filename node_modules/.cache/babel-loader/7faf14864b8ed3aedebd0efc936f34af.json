{"ast":null,"code":"var _jsxFileName = \"/Users/briancoburn/WebstormProjects/reactive_robot/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport * as ds from \"./DataService\";\nimport * as rr from './ReactiveRobot';\nimport Component1 from \"./Component1\"; //let ds;\n\nfunction App() {\n  const [chartValues, updateChartValues] = useState([]);\n  console.log('App==>this:', this);\n  useEffect(() => {\n    console.log('useEffect==>this:', this);\n    rr.addObserver(onEvent);\n    ds.getData();\n  }, []);\n\n  function onEvent(event) {\n    switch (event.type) {\n      case 'test':\n        console.log('App==>got test event');\n    }\n  } // let total = chartValues.reduce((accum,curr)=>{return accum+curr},0)\n  // let average = total/chartValues.length\n  //let messages = [];\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \"App\", /*#__PURE__*/React.createElement(Component1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/briancoburn/WebstormProjects/reactive_robot/src/App.js"],"names":["React","useState","useEffect","ds","rr","Component1","App","chartValues","updateChartValues","console","log","addObserver","onEvent","getData","event","type"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCP,QAAQ,CAAC,EAAD,CAAjD;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,IAA3B;AAEAR,EAAAA,SAAS,CAAC,MAAI;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,IAAjC;AACAN,IAAAA,EAAE,CAACO,WAAH,CAAeC,OAAf;AACAT,IAAAA,EAAE,CAACU,OAAH;AACD,GAJQ,EAIP,EAJO,CAAT;;AAMA,WAASD,OAAT,CAAiBE,KAAjB,EAAuB;AACrB,YAAQA,KAAK,CAACC,IAAd;AACE,WAAK,MAAL;AACEN,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAFJ;AAID,GAfY,CAiBb;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport * as ds from \"./DataService\";\nimport * as rr from './ReactiveRobot'\nimport Component1 from \"./Component1\";\n\n//let ds;\n\nfunction App() {\n  const [chartValues, updateChartValues] = useState([])\n  console.log('App==>this:', this)\n\n  useEffect(()=>{\n    console.log('useEffect==>this:', this)\n    rr.addObserver(onEvent)\n    ds.getData()\n  },[])\n\n  function onEvent(event){\n    switch (event.type){\n      case 'test':\n        console.log('App==>got test event')\n    }\n  }\n\n  // let total = chartValues.reduce((accum,curr)=>{return accum+curr},0)\n  // let average = total/chartValues.length\n  //let messages = [];\n\n  return (\n    <div className=\"App\">\n      App\n      <Component1/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}