{"ast":null,"code":"import * as rr from './ReactiveRobot';\nimport * as ev from './Events';\nlet clients = [];\nlet updateDelta = 100;\nlet interval = null;\n\nfunction onEvent(event) {\n  switch (event.type) {\n    case ev.INITIALIZE_COMPONENTS:\n      updateDelta = event.data.updateDelta;\n\n    case ev.COMPONENT_UPDATE_GET:\n      //getData(event.data.name)\n      clients.push(event.data.name);\n  }\n}\n\nrr.addObserver(onEvent);\nexport function getData(name) {\n  console.log('DataService==>getData()==>name:' + name); //make some fake data, but this could easily be coming from an api call//\n  // let interval = setInterval(()=>{\n  //   let rand = Math.random()\n  //   if(rand < 0.33){\n  //     rr.next({type:ev.APP_TEST,data:{name:'hello App'}})\n  //   }else if(rand < 0.66){\n  //     rr.next({type:ev.COMPONENT1_TEST,data:{name:'hello Component1'}})\n  //   }else{\n  //     rr.next({type:ev.COMPONENT2_TEST,data:{name:'hello Component2'}})\n  //   }\n  //\n  // },1000)\n\n  if (name) {\n    clients.push(name);\n  }\n\n  function sendUpdate() {\n    // clients.forEach((c)=>{\n    //   rr.next({type:ev.COMPONENT_UPDATE_RECEIVED,data:{name:c, message:'updated at '+Date.now()}})\n    // })\n    let index = Math.floor(Math.random() * clients.length);\n    let nameOfClientToUpdate = clients[index];\n    rr.next({\n      type: ev.COMPONENT_UPDATE_RECEIVED,\n      data: {\n        name: nameOfClientToUpdate,\n        message: 'updated at ' + Date.now()\n      }\n    });\n  } //if(!interval){\n\n\n  clearInterval(interval);\n  console.log('getData()==>setting interval, updateDelta:', updateDelta);\n  interval = setInterval(sendUpdate, updateDelta); //}\n}","map":{"version":3,"sources":["/Users/briancoburn/WebstormProjects/reactive_robot/src/DataService.js"],"names":["rr","ev","clients","updateDelta","interval","onEvent","event","type","INITIALIZE_COMPONENTS","data","COMPONENT_UPDATE_GET","push","name","addObserver","getData","console","log","sendUpdate","index","Math","floor","random","length","nameOfClientToUpdate","next","COMPONENT_UPDATE_RECEIVED","message","Date","now","clearInterval","setInterval"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,UAApB;AAEA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,WAAW,GAAG,GAAlB;AACA,IAAIC,QAAQ,GAAG,IAAf;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AACrB,UAAQA,KAAK,CAACC,IAAd;AACE,SAAKN,EAAE,CAACO,qBAAR;AACEL,MAAAA,WAAW,GAAGG,KAAK,CAACG,IAAN,CAAWN,WAAzB;;AACF,SAAKF,EAAE,CAACS,oBAAR;AACE;AACAR,MAAAA,OAAO,CAACS,IAAR,CAAaL,KAAK,CAACG,IAAN,CAAWG,IAAxB;AALJ;AAOD;;AACDZ,EAAE,CAACa,WAAH,CAAeR,OAAf;AACA,OAAO,SAASS,OAAT,CAAiBF,IAAjB,EAAsB;AAC3BG,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAkCJ,IAA9C,EAD2B,CAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAGA,IAAH,EAAQ;AACNV,IAAAA,OAAO,CAACS,IAAR,CAAaC,IAAb;AACD;;AACD,WAASK,UAAT,GAAqB;AACnB;AACA;AACA;AACA,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcnB,OAAO,CAACoB,MAAjC,CAAZ;AACA,QAAIC,oBAAoB,GAAGrB,OAAO,CAACgB,KAAD,CAAlC;AACAlB,IAAAA,EAAE,CAACwB,IAAH,CAAQ;AAACjB,MAAAA,IAAI,EAACN,EAAE,CAACwB,yBAAT;AAAmChB,MAAAA,IAAI,EAAC;AAACG,QAAAA,IAAI,EAACW,oBAAN;AAA4BG,QAAAA,OAAO,EAAC,gBAAcC,IAAI,CAACC,GAAL;AAAlD;AAAxC,KAAR;AACD,GAxB0B,CAyB3B;;;AACAC,EAAAA,aAAa,CAACzB,QAAD,CAAb;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0Db,WAA1D;AACAC,EAAAA,QAAQ,GAAG0B,WAAW,CAACb,UAAD,EAAYd,WAAZ,CAAtB,CA5B2B,CA6B3B;AACD","sourcesContent":["import * as rr from './ReactiveRobot'\nimport * as ev from './Events'\n\nlet clients = []\nlet updateDelta = 100\nlet interval = null\nfunction onEvent(event){\n  switch (event.type){\n    case ev.INITIALIZE_COMPONENTS:\n      updateDelta = event.data.updateDelta\n    case ev.COMPONENT_UPDATE_GET:\n      //getData(event.data.name)\n      clients.push(event.data.name)\n  }\n}\nrr.addObserver(onEvent)\nexport function getData(name){\n  console.log('DataService==>getData()==>name:'+name)\n  //make some fake data, but this could easily be coming from an api call//\n  // let interval = setInterval(()=>{\n  //   let rand = Math.random()\n  //   if(rand < 0.33){\n  //     rr.next({type:ev.APP_TEST,data:{name:'hello App'}})\n  //   }else if(rand < 0.66){\n  //     rr.next({type:ev.COMPONENT1_TEST,data:{name:'hello Component1'}})\n  //   }else{\n  //     rr.next({type:ev.COMPONENT2_TEST,data:{name:'hello Component2'}})\n  //   }\n  //\n  // },1000)\n  if(name){\n    clients.push(name)\n  }\n  function sendUpdate(){\n    // clients.forEach((c)=>{\n    //   rr.next({type:ev.COMPONENT_UPDATE_RECEIVED,data:{name:c, message:'updated at '+Date.now()}})\n    // })\n    let index = Math.floor(Math.random()*clients.length)\n    let nameOfClientToUpdate = clients[index]\n    rr.next({type:ev.COMPONENT_UPDATE_RECEIVED,data:{name:nameOfClientToUpdate, message:'updated at '+Date.now()}})\n  }\n  //if(!interval){\n  clearInterval(interval)\n  console.log('getData()==>setting interval, updateDelta:', updateDelta)\n  interval = setInterval(sendUpdate,updateDelta)\n  //}\n}"]},"metadata":{},"sourceType":"module"}