{"ast":null,"code":"// let observers = []\n// let gData = {}\n// function addObserver(ob){\n//   if(!observers.find((it)=>{return it===ob})){\n//     observers.push(ob)\n//   }\n// }\n// function removeObserver(ob){\n//   let index = observers.indexOf(ob)\n//   if(index > -1){\n//     observers.splice(index,1)\n//   }\n// }\n// function next(event){\n//   observers.forEach((ob)=>{\n//     ob(event)\n//   })\n// }\n//\n// export {observers,gData,addObserver,removeObserver,next}\nexport let observers = [];\nexport let gData = {};\nexport function addObserver(ob) {\n  if (!observers.find(it => {\n    return it === ob;\n  })) {\n    observers.push(ob);\n  }\n}\nexport function removeObserver(ob) {\n  let index = observers.indexOf(ob);\n\n  if (index > -1) {\n    observers.splice(index, 1);\n  }\n}\nexport function next(event) {\n  observers.forEach(ob => {\n    ob(event);\n  });\n} //export {observers,gData,addObserver,removeObserver,next}","map":{"version":3,"sources":["/Users/briancoburn/WebstormProjects/reactive_robot/src/ReactiveRobot.js"],"names":["observers","gData","addObserver","ob","find","it","push","removeObserver","index","indexOf","splice","next","event","forEach"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,IAAIA,SAAS,GAAG,EAAhB;AACP,OAAO,IAAIC,KAAK,GAAG,EAAZ;AACP,OAAO,SAASC,WAAT,CAAqBC,EAArB,EAAwB;AAC7B,MAAG,CAACH,SAAS,CAACI,IAAV,CAAgBC,EAAD,IAAM;AAAC,WAAOA,EAAE,KAAGF,EAAZ;AAAe,GAArC,CAAJ,EAA2C;AACzCH,IAAAA,SAAS,CAACM,IAAV,CAAeH,EAAf;AACD;AACF;AACD,OAAO,SAASI,cAAT,CAAwBJ,EAAxB,EAA2B;AAChC,MAAIK,KAAK,GAAGR,SAAS,CAACS,OAAV,CAAkBN,EAAlB,CAAZ;;AACA,MAAGK,KAAK,GAAG,CAAC,CAAZ,EAAc;AACZR,IAAAA,SAAS,CAACU,MAAV,CAAiBF,KAAjB,EAAuB,CAAvB;AACD;AACF;AACD,OAAO,SAASG,IAAT,CAAcC,KAAd,EAAoB;AACzBZ,EAAAA,SAAS,CAACa,OAAV,CAAmBV,EAAD,IAAM;AACtBA,IAAAA,EAAE,CAACS,KAAD,CAAF;AACD,GAFD;AAGD,C,CAED","sourcesContent":["\n\n\n// let observers = []\n// let gData = {}\n// function addObserver(ob){\n//   if(!observers.find((it)=>{return it===ob})){\n//     observers.push(ob)\n//   }\n// }\n// function removeObserver(ob){\n//   let index = observers.indexOf(ob)\n//   if(index > -1){\n//     observers.splice(index,1)\n//   }\n// }\n// function next(event){\n//   observers.forEach((ob)=>{\n//     ob(event)\n//   })\n// }\n//\n// export {observers,gData,addObserver,removeObserver,next}\n\nexport let observers = []\nexport let gData = {}\nexport function addObserver(ob){\n  if(!observers.find((it)=>{return it===ob})){\n    observers.push(ob)\n  }\n}\nexport function removeObserver(ob){\n  let index = observers.indexOf(ob)\n  if(index > -1){\n    observers.splice(index,1)\n  }\n}\nexport function next(event){\n  observers.forEach((ob)=>{\n    ob(event)\n  })\n}\n\n//export {observers,gData,addObserver,removeObserver,next}\n\n"]},"metadata":{},"sourceType":"module"}