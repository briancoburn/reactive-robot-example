{"ast":null,"code":"var _jsxFileName = \"/Users/briancoburn/WebstormProjects/reactive_robot/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport DataService from \"./DataService\";\nimport RR from './ReactiveRobot';\nlet ds;\nlet rr;\n\nfunction App() {\n  const [chartValues, updateChartValues] = useState([]); //const store = createStore(reducer)\n\n  useEffect(() => {\n    ds = new DataService();\n    rr = new RR();\n    console.log('RR.addObserver:', RR.addObserver);\n    RR.addObserver();\n    console.log('RR:', RR); // store.subscribe(() => {\n    //   let state = store.getState()\n    //   updateChartValues(state.chartValues)\n    // })\n    //\n    // setInterval(()=>{\n    //   store.dispatch({type:'UPDATE_CHART', value: Math.floor(Math.random() * 100)})\n    // },1000)\n  }, []); // let total = chartValues.reduce((accum,curr)=>{return accum+curr},0)\n  // let average = total/chartValues.length\n  //let messages = [];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"App\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/briancoburn/WebstormProjects/reactive_robot/src/App.js"],"names":["React","useState","useEffect","DataService","RR","ds","rr","App","chartValues","updateChartValues","console","log","addObserver"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,EAAP,MAAe,iBAAf;AACA,IAAIC,EAAJ;AACA,IAAIC,EAAJ;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCR,QAAQ,CAAC,EAAD,CAAjD,CADa,CAEb;;AAGAC,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,EAAE,GAAG,IAAIF,WAAJ,EAAL;AACAG,IAAAA,EAAE,GAAG,IAAIF,EAAJ,EAAL;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BP,EAAE,CAACQ,WAAlC;AACAR,IAAAA,EAAE,CAACQ,WAAH;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,EAAnB,EALY,CAMZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GAfQ,EAeP,EAfO,CAAT,CALa,CAsBb;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAKD;;AAED,eAAeG,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport DataService from \"./DataService\";\n\nimport RR from './ReactiveRobot'\nlet ds;\nlet rr;\n\nfunction App() {\n  const [chartValues, updateChartValues] = useState([])\n  //const store = createStore(reducer)\n\n\n  useEffect(()=>{\n    ds = new DataService()\n    rr = new RR()\n    console.log('RR.addObserver:', RR.addObserver)\n    RR.addObserver()\n    console.log('RR:', RR)\n    // store.subscribe(() => {\n    //   let state = store.getState()\n    //   updateChartValues(state.chartValues)\n    // })\n    //\n    // setInterval(()=>{\n    //   store.dispatch({type:'UPDATE_CHART', value: Math.floor(Math.random() * 100)})\n    // },1000)\n\n  },[])\n\n  // let total = chartValues.reduce((accum,curr)=>{return accum+curr},0)\n  // let average = total/chartValues.length\n  //let messages = [];\n\n  return (\n    <div className=\"App\">\n      App\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}