{"ast":null,"code":"export default function rr() {}\nlet observers = [];\nlet globalData = {};\n\nfunction addObserver(ob) {\n  if (!observers.find(it => {\n    return it === ob;\n  })) {\n    observers.push(ob);\n  }\n}\n\nfunction removeObserver(ob) {\n  let index = observers.indexOf(ob);\n\n  if (index > -1) {\n    observers.splice(index, 1);\n  }\n}\n\nfunction next(event) {\n  observers.forEach(ob => {\n    ob(event);\n  });\n} // export function addObserver(ob){\n//   if(!observers.find((it)=>{return it===ob})){\n//     observers.push(ob)\n//   }\n// }\n// export function removeObserver(ob){\n//   let index = observers.indexOf(ob)\n//   if(index > -1){\n//     observers.splice(index,1)\n//   }\n// }\n// export function next(event){\n//   observers.forEach((ob)=>{\n//     ob(event)\n//   })\n// }","map":{"version":3,"sources":["/Users/briancoburn/WebstormProjects/reactive_robot/src/ReactiveRobot.js"],"names":["rr","observers","globalData","addObserver","ob","find","it","push","removeObserver","index","indexOf","splice","next","event","forEach"],"mappings":"AAEA,eAAe,SAASA,EAAT,GAAa,CAE3B;AAED,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,UAAU,GAAG,EAAjB;;AACA,SAASC,WAAT,CAAqBC,EAArB,EAAwB;AACtB,MAAG,CAACH,SAAS,CAACI,IAAV,CAAgBC,EAAD,IAAM;AAAC,WAAOA,EAAE,KAAGF,EAAZ;AAAe,GAArC,CAAJ,EAA2C;AACzCH,IAAAA,SAAS,CAACM,IAAV,CAAeH,EAAf;AACD;AACF;;AACD,SAASI,cAAT,CAAwBJ,EAAxB,EAA2B;AACzB,MAAIK,KAAK,GAAGR,SAAS,CAACS,OAAV,CAAkBN,EAAlB,CAAZ;;AACA,MAAGK,KAAK,GAAG,CAAC,CAAZ,EAAc;AACZR,IAAAA,SAAS,CAACU,MAAV,CAAiBF,KAAjB,EAAuB,CAAvB;AACD;AACF;;AACD,SAASG,IAAT,CAAcC,KAAd,EAAoB;AAClBZ,EAAAA,SAAS,CAACa,OAAV,CAAmBV,EAAD,IAAM;AACtBA,IAAAA,EAAE,CAACS,KAAD,CAAF;AACD,GAFD;AAGD,C,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n\nexport default function rr(){\n\n}\n\nlet observers = []\nlet globalData = {}\nfunction addObserver(ob){\n  if(!observers.find((it)=>{return it===ob})){\n    observers.push(ob)\n  }\n}\nfunction removeObserver(ob){\n  let index = observers.indexOf(ob)\n  if(index > -1){\n    observers.splice(index,1)\n  }\n}\nfunction next(event){\n  observers.forEach((ob)=>{\n    ob(event)\n  })\n}\n\n\n\n// export function addObserver(ob){\n//   if(!observers.find((it)=>{return it===ob})){\n//     observers.push(ob)\n//   }\n// }\n// export function removeObserver(ob){\n//   let index = observers.indexOf(ob)\n//   if(index > -1){\n//     observers.splice(index,1)\n//   }\n// }\n// export function next(event){\n//   observers.forEach((ob)=>{\n//     ob(event)\n//   })\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}