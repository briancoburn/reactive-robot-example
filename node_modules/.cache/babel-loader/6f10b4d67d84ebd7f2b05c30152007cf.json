{"ast":null,"code":"var _jsxFileName = \"/Users/briancoburn/WebstormProjects/test/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { createStore } from 'redux';\n/**\n * This is a reducer, a pure function with (state, action) => state signature.\n * It describes how an action transforms the state into the next state.\n *\n * The shape of the state is up to you: it can be a primitive, an array, an object,\n * or even an Immutable.js data structure. The only important part is that you should\n * not mutate the state object, but return a new object if the state changes.\n *\n * In this example, we use a `switch` statement and strings, but you can use a helper that\n * follows a different convention (such as function maps) if it makes sense for your\n * project.\n */\n\nfunction App() {\n  function counter(state = 0, action) {\n    switch (action.type) {\n      case 'INCREMENT':\n        return state + 1;\n\n      case 'DECREMENT':\n        return state - 1;\n\n      default:\n        return state;\n    }\n  }\n\n  let store = createStore(counter);\n  store.subscribe(() => {\n    console.log(store.getState());\n  }); // The only way to mutate the internal state is to dispatch an action.\n  // The actions can be serialized, logged or stored and later replayed.\n\n  store.dispatch({\n    type: 'INCREMENT'\n  }); // 1\n\n  store.dispatch({\n    type: 'INCREMENT'\n  }); // 2\n\n  store.dispatch({\n    type: 'DECREMENT'\n  }); // 1\n  //console.log('counter:', counter)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, 'counter:' + counter()), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Learn React\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/briancoburn/WebstormProjects/test/src/App.js"],"names":["React","createStore","App","counter","state","action","type","store","subscribe","console","log","getState","dispatch","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,WAASC,OAAT,CAAiBC,KAAK,GAAG,CAAzB,EAA4BC,MAA5B,EAAoC;AAClC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,WAAL;AACE,eAAOF,KAAK,GAAG,CAAf;;AACF,WAAK,WAAL;AACE,eAAOA,KAAK,GAAG,CAAf;;AACF;AACE,eAAOA,KAAP;AANJ;AAQD;;AACD,MAAIG,KAAK,GAAGN,WAAW,CAACE,OAAD,CAAvB;AACAI,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AACD,GAFD,EAZa,CAeb;AACA;;AACAJ,EAAAA,KAAK,CAACK,QAAN,CAAe;AAAEN,IAAAA,IAAI,EAAE;AAAR,GAAf,EAjBa,CAkBb;;AACAC,EAAAA,KAAK,CAACK,QAAN,CAAe;AAAEN,IAAAA,IAAI,EAAE;AAAR,GAAf,EAnBa,CAoBb;;AACAC,EAAAA,KAAK,CAACK,QAAN,CAAe;AAAEN,IAAAA,IAAI,EAAE;AAAR,GAAf,EArBa,CAsBb;AACA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEO,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,aAAYV,OAAO,EAA1B,CALF,eAME;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CADF,CADF;AAmBD;;AAED,eAAeD,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { createStore } from 'redux'\n/**\n * This is a reducer, a pure function with (state, action) => state signature.\n * It describes how an action transforms the state into the next state.\n *\n * The shape of the state is up to you: it can be a primitive, an array, an object,\n * or even an Immutable.js data structure. The only important part is that you should\n * not mutate the state object, but return a new object if the state changes.\n *\n * In this example, we use a `switch` statement and strings, but you can use a helper that\n * follows a different convention (such as function maps) if it makes sense for your\n * project.\n */\n\nfunction App() {\n  function counter(state = 0, action) {\n    switch (action.type) {\n      case 'INCREMENT':\n        return state + 1\n      case 'DECREMENT':\n        return state - 1\n      default:\n        return state\n    }\n  }\n  let store = createStore(counter)\n  store.subscribe(() => {\n    console.log(store.getState())\n  })\n  // The only way to mutate the internal state is to dispatch an action.\n  // The actions can be serialized, logged or stored and later replayed.\n  store.dispatch({ type: 'INCREMENT' })\n  // 1\n  store.dispatch({ type: 'INCREMENT' })\n  // 2\n  store.dispatch({ type: 'DECREMENT' })\n  // 1\n  //console.log('counter:', counter)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <span>{'counter:'+ counter()}</span>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}