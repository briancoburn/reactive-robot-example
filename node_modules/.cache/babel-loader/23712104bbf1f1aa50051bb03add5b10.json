{"ast":null,"code":"export default function rr() {\n  let observers = [];\n  let globalData = {};\n\n  function addObserver(ob) {\n    if (!observers.find(it => {\n      return it === ob;\n    })) {\n      observers.push(ob);\n    }\n  }\n\n  function removeObserver(ob) {\n    let index = observers.indexOf(ob);\n\n    if (index > -1) {\n      observers.splice(index, 1);\n    }\n  }\n\n  function next(event) {\n    observers.forEach(ob => {\n      ob(event);\n    });\n  }\n} // export function addObserver(ob){\n//   if(!observers.find((it)=>{return it===ob})){\n//     observers.push(ob)\n//   }\n// }\n// export function removeObserver(ob){\n//   let index = observers.indexOf(ob)\n//   if(index > -1){\n//     observers.splice(index,1)\n//   }\n// }\n// export function next(event){\n//   observers.forEach((ob)=>{\n//     ob(event)\n//   })\n// }","map":{"version":3,"sources":["/Users/briancoburn/WebstormProjects/reactive_robot/src/ReactiveRobot.js"],"names":["rr","observers","globalData","addObserver","ob","find","it","push","removeObserver","index","indexOf","splice","next","event","forEach"],"mappings":"AAEA,eAAe,SAASA,EAAT,GAAa;AAC1B,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,WAASC,WAAT,CAAqBC,EAArB,EAAwB;AACtB,QAAG,CAACH,SAAS,CAACI,IAAV,CAAgBC,EAAD,IAAM;AAAC,aAAOA,EAAE,KAAGF,EAAZ;AAAe,KAArC,CAAJ,EAA2C;AACzCH,MAAAA,SAAS,CAACM,IAAV,CAAeH,EAAf;AACD;AACF;;AACD,WAASI,cAAT,CAAwBJ,EAAxB,EAA2B;AACzB,QAAIK,KAAK,GAAGR,SAAS,CAACS,OAAV,CAAkBN,EAAlB,CAAZ;;AACA,QAAGK,KAAK,GAAG,CAAC,CAAZ,EAAc;AACZR,MAAAA,SAAS,CAACU,MAAV,CAAiBF,KAAjB,EAAuB,CAAvB;AACD;AACF;;AACD,WAASG,IAAT,CAAcC,KAAd,EAAoB;AAClBZ,IAAAA,SAAS,CAACa,OAAV,CAAmBV,EAAD,IAAM;AACtBA,MAAAA,EAAE,CAACS,KAAD,CAAF;AACD,KAFD;AAGD;AACF,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n\nexport default function rr(){\n  let observers = []\n  let globalData = {}\n  function addObserver(ob){\n    if(!observers.find((it)=>{return it===ob})){\n      observers.push(ob)\n    }\n  }\n  function removeObserver(ob){\n    let index = observers.indexOf(ob)\n    if(index > -1){\n      observers.splice(index,1)\n    }\n  }\n  function next(event){\n    observers.forEach((ob)=>{\n      ob(event)\n    })\n  }\n}\n\n// export function addObserver(ob){\n//   if(!observers.find((it)=>{return it===ob})){\n//     observers.push(ob)\n//   }\n// }\n// export function removeObserver(ob){\n//   let index = observers.indexOf(ob)\n//   if(index > -1){\n//     observers.splice(index,1)\n//   }\n// }\n// export function next(event){\n//   observers.forEach((ob)=>{\n//     ob(event)\n//   })\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}